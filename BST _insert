#include <iostream>
using namespace std;

class BstNode {

public:
    int data;
    BstNode* left;
    BstNode* right;
    BstNode* root = NULL;
    
    
    void insert_node(BstNode* node) {

        if (root == NULL)
            root = node;
        else
        {
            BstNode* temp = root;
            while (temp != NULL)
            {
                if (node->data <= temp->data && temp->left == NULL)
                {
                    temp->left = node;
                    break;
                }
                else if (node->data <= temp->data)
                {
                    temp = temp->left;
                }
                else if (node->data > temp->data && temp->right == NULL)
                {
                    temp->right = node;
                    break;
                }
                else { temp = temp->right; }



            }


        }
        
    }
    void insert(int data)
    {
        BstNode* node = new BstNode();
        node->data = data;
        node->right = NULL;
        node->left = NULL;
        insert_node(node);
    }

};


int main()
{
   
    BstNode b;
    b.insert(50);
    b.insert(30);
    b.insert(26);
   b.insert(20);
   b.insert(17);
   b.insert(25);
   b.insert(16);
   cout << b.root->data << endl;
   cout << b.root->left->data << endl;
   cout << b.root->left->left->data << endl;
   cout << b.root->left->left->left->right->data << endl;


}
