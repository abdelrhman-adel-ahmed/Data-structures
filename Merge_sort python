def merge_sort(arr):
    """
    split array into to sub arrays and keep spliting till we have only one elemnt in the left buttom and right 
    button, then call the merge and pass the left ,right ,the original array
    """
    l=len(arr)
    mid=len(arr)//2
    if(l<2):
        return
    left=arr[:mid]
    right=arr[mid:]
    merge_sort(left)
    merge_sort(right)
    merge(left,right,arr)

def merge(left,right,arr):
    #i pointer for the left array ,j for the right array,k for the actual array 
    i=0
    j=0
    k=0
    sl=len(left)
    sr=len(right)
    """
    if we exceed the left array length or the right array length that mean we exhausted the array
    we overwirte the sorted value to the original array ,by then end of our recursion tree we will 
    overwrite all the values to its corresponding right positions
    """
    while(i<sl and j<sr):
        if(left[i]<=right[j]):
            arr[k]=left[i]
            i+=1
        else:
            arr[k]=right[j]
            j+=1
        k+=1
    while(i<sl):
        arr[k]=left[i]
        i+=1
        k+=1
    while(j<sr):
        arr[k]=right[j]
        j+=1
        k+=1

if __name__ == '__main__':
    arr = [1,5,7,3,1,331,21,321312,421,2,3,4,123,31,4,311,3211,331,31321,2313,321312,321,7,8,10] 
    print ("Given array is: ") 
    print(arr)
    merge_sort(arr)
    print("Sorted array is: ")
    print(arr)
